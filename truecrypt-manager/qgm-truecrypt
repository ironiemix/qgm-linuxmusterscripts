#!/bin/bash

# Get Arguments
action="mount"
while getopts 'dc' OPT; do
  case $OPT in
    c)  action="create";;
    d)  action="umount";;
    *)  unknown="yes";;
  esac
done
# Als erstes Argument muss das Home des Users 
# übergeben werden!
#if [ "x$1" = "x" ]; then 
#	echo "FEHLER Erstes Argument muss Userhome sein."
#	exit 
#fi

USERHOME=$HOME


function mount_container () {
	# suche den Container
	CONTAINER=$(find /media -name qgm-encrypted.tc 2> /dev/null | head -n 1)

	CONTAINER_MOUNTED=$(truecrypt -t -l | grep $CONTAINER)
	if [ "x$CONTAINER_MOUNTED" != "x" ]; then 
		zenity  --question --window-icon="info" --text="Der Container ist bereits eingebunden!\n\nMöchten Sie den Container auswerfen?"

		if [ $? -eq 0 ]; then 
			umount_container
		fi
		exit 0
	fi 


	if [ "x$CONTAINER" = "x" ]; then 
		echo "FEHLER Kein Container gefunden"
		exit
	fi

	# Verzeichnis anlegen
	mkdir -p $USERHOME/USB-verschluesselt
	# Mounten
	sudo truecrypt $CONTAINER $USERHOME/USB-verschluesselt
}

function umount_container () {	
	sudo truecrypt -d $CONTAINER && zenity  --question --text="Der verschlüsselte Container wurde sicher ausgeworfen.\n\nWollen Sie den USB Stick ebenfalls auswerfen?"
	
	if [ $? -eq 0 ]; then 
		echo 
	fi

}

function create_new_container () {
        MOUNTPOINT=$(mount | grep "on /media" | awk -F"type" '{print $1}' | awk -F"on" '{print $2}' | sed -e "s/^ //"| sed -e "s/ $//" | head -n 1)
	if [ "x$MOUNTPOINT" = "x" ]; then 
		echo "Kein Massenspeichermedium gefunden"
		exit 1
	fi
        FREE=$(df "$MOUNTPOINT" | awk '{print $4}' | tail -n 1)
	SIZE=$(zenity 	--entry --title="Göße des neuen Containers festlegen" \
			--text "Im Verzeichnis $MOUNTPOINT ist $FREE Kilobytes Platz\n Wie groß soll der Contaiiner sein?" \
			--entry-text "Groesse")
	
	
	
	CONTAINER_PASS=$(zenity --entry \
				--title="Passwort festlegen" \
				--text="Geben Sie ein gutes Passwort für den neuen Datencontainer an." \
				--entry-text "Passwort")


	truecrypt 	--text \
			--filesystem=FAT \
			--volume-type=normal \
			--create  \
			--size=20000000 \
			--encryption=AES \
			--hash=RIPEMD-160 \
			--password="$CONTAINER_PASS" \
			--keyfiles= \
			--random-source=/dev/urandom \
			test.tc

}

case $action in 
 create) 
	create_new_container
 ;;
 mount)
	mount_container
 ;;
 umount)
	umount_container
 ;;
esac
